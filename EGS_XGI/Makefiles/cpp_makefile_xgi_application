###############################################################################
#
#   Default EGS_XGI C++ makefile based on: Default EGSnrc C++ makefile
#
#
#   This file is part of the EGS_XGI - an X-ray grating interferometry
#   extension for EGSnrc.
#
#   This program is free software: you can redistribute it and/or modify
#   it under the terms of the GNU Affero General Public License as published
#   by the Free Software Foundation, either version 3 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU Affero General Public License for more details.
#
#   You should have received a copy of the GNU Affero General Public License
#   along with this program.  If not, see <https://www.gnu.org/licenses/>.
#
###############################################################################
#
#   Changes made by:     Stefan Tessarini
#
#
#
###############################################################################

# Original header:
###############################################################################
#
#  EGSnrc default C++ makefile
#  Copyright (C) 2015 National Research Council Canada
#
#  This file is part of EGSnrc.
#
#  EGSnrc is free software: you can redistribute it and/or modify it under
#  the terms of the GNU Affero General Public License as published by the
#  Free Software Foundation, either version 3 of the License, or (at your
#  option) any later version.
#
#  EGSnrc is distributed in the hope that it will be useful, but WITHOUT ANY
#  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
#  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for
#  more details.
#
#  You should have received a copy of the GNU Affero General Public License
#  along with EGSnrc. If not, see <http://www.gnu.org/licenses/>.
#
###############################################################################
#
#  Author:          Iwan Kawrakow, 2005
#
#  Contributors:    Ernesto Mainegra-Hing
#
###############################################################################
#
#  Skeleton makefile for building C++ user codes based on EGS_SimpleInterface.
#  Include this file in your Makefile. It is assumed that there is a single
#  .cpp file needed to build your C++ user code, so you must add additional
#  rules and dependencies if needed.
#
###############################################################################

#EGS_XGI additions/changes:
#include $(EGS_CONFIG)
#include $(SPEC_DIR)egspp1.spec

#dependencies
dep_xgi_application=$(XGI_PATH)/EGS_XGIApplication/EGS_XGIApplication.cpp


#SplittingAlgorithms
SplittingAlgorithm_dep=$(XGI_PATH)/Diffraction/SplittingAlgorithm/SplittingAlgorithm.cpp

DefaultSplittingAlgorithm_dep=$(XGI_PATH)/Diffraction/SplittingAlgorithm/DefaultSplittingAlgorithm/DefaultSplittingAlgorithm.cpp

#OpticalElements
OpticalElement_dep=$(XGI_PATH)/Diffraction/OpticalElement/OpticalElement.cpp

SplittingObject_dep=$(XGI_PATH)/Diffraction/OpticalElement/SplittingObject/SplittingObject.cpp

dep_DetectorZPlane_dep=$(XGI_PATH)/Diffraction/OpticalElement/DetectorObject/DetectorZPlane/DetectorZPlane.cpp

dep_BinarySourceGratingFourierZPlane=$(XGI_PATH)/Diffraction/OpticalElement/SplittingObject/BinarySourceGratingFourierZPlane/BinarySourceGratingFourierZPlane.cpp

DetectorZPlaneMem_dep=$(XGI_PATH)/Diffraction/OpticalElement/DetectorObject/DetectorZPlaneMem/DetectorZPlaneMem.cpp

dep_FourierSeriesZPlane=$(XGI_PATH)/Diffraction/OpticalElement/SplittingObject/FourierSeriesZPlane/FourierSeriesZPlane.cpp

dep_HuygensZPlane=$(XGI_PATH)/Diffraction/OpticalElement/SplittingObject/HuygensZPlane/HuygensZPlane.cpp

#Refractive index:
dep_RefractiveIndexCalculator=$(XGI_PATH)/RefractiveIndexCalculator/RefractiveIndexCalculator.cpp


phase_objects=egs_xgi_application.o

splitting_algorithm_objects=OpticalElement.o SplittingObject.o DetectorZPlane.o SplittingAlgorithm.o DefaultSplittingAlgorithm.o DetectorZPlaneMem.o FourierSeriesZPlane.o RefractiveIndexCalculator.o BinarySourceGratingFourierZPlane.o HuygensZPlane.o
###############################################################################



all: $(target) $(lib_target)

$(target): $(user_objects) $(egs_objects) $(phase_objects) $(splitting_algorithm_objects)
	$(CXX) $(opt) $(EOUT)$@ $^ $(lib_link1) $(link2_prefix)egspp$(link2_suffix) $(fortran_libs) $(user_libs)

$(lib_target): $(user_lib_objects) $(egs_lib_objects)
	$(CXX) $(opt) $(shared) $(lib_link1) $^ $(extra) $(link2_prefix)egspp$(link2_suffix) $(fortran_libs) $(user_libs)




#####################################################
#EGS_XGI additions:

egs_xgi_application.$(obje): $(dep_xgi_application) $(dep_advanced_application)
	$(object_rule) $(user_libs)


OpticalElement.$(obje):$(OpticalElement_dep)
	$(object_rule) $(user_libs)

SplittingObject.$(obje):$(SplittingObject_dep)
	$(object_rule) $(user_libs)

DetectorZPlane.$(obje):$(dep_DetectorZPlane_dep)
	$(object_rule) $(user_libs)

SplittingAlgorithm.$(obje):$(SplittingAlgorithm_dep)
	$(object_rule) $(user_libs)

DefaultSplittingAlgorithm.$(obje):$(DefaultSplittingAlgorithm_dep)
	$(object_rule) $(user_libs)

DetectorZPlaneMem.$(obje):$(DetectorZPlaneMem_dep)
	$(object_rule) $(user_libs)

FourierSeriesZPlane.$(obje):$(dep_FourierSeriesZPlane)
	$(object_rule) $(user_libs)

RefractiveIndexCalculator.$(obje):$(dep_RefractiveIndexCalculator)
	$(object_rule) $(user_libs)

BinarySourceGratingFourierZPlane.$(obje):$(dep_BinarySourceGratingFourierZPlane)
	$(object_rule)  $(user_libs)

HuygensZPlane.$(obje):$(dep_HuygensZPlane)
	$(object_rule) $(user_libs)

#add additional extensions here:


#####################################################

egs_simple_application_$(my_machine).$(obje): $(dep_simple_application)
	$(object_rule)

egs_advanced_application_$(my_machine).$(obje): $(dep_advanced_application)
	$(object_rule)

egs_simple_application_lib_$(my_machine).$(obje): $(dep_simple_application)
	$(object_lib_rule)

egs_advanced_application_lib_$(my_machine).$(obje): $(dep_advanced_application)
	$(object_lib_rule)

$(USER_CODE)_$(my_machine).$(obje): $(dep_user_code)

$(USER_CODE)_lib_$(my_machine).$(obje): $(dep_user_code)
	$(object_lib_rule)

egs_interface2_$(my_machine).$(obje): $(dep_egs_interface)
	$(object_rule)

egsnrc_$(my_machine).$(obje): egsnrc_$(my_machine).F array_sizes.h
	$(F77) $(FC_FLAGS) $(FDEFS) -c $(FOUT)$@ $<

egsnrc_$(my_machine).F: $(CPP_SOURCES)
	@echo "Mortran compiling EGSnrc sources ..."
	@$(MORTRAN_EXE) -s -i -d $(MORTRAN_DATA) -f $(CPP_SOURCES) -o7 $@ \
           -o8 $(@:.F=.mortlst)

$(user_objects):
	$(object_rule)

clean:
	$(REMOVE) mortjob.mortran egsnrc_$(my_machine).F egsnrc_$(my_machine).mortlst
	$(REMOVE) $(target) $(user_objects) $(egs_objects)

.PHONY: clean library
